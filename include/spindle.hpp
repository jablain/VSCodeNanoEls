#pragma once
#include "config.hpp"

extern unsigned long spindleEncTime; // micros() of the previous spindle update
extern long spindlePos; // Spindle position
extern long spindlePosAvg; // Spindle position accounting for encoder backlash
extern int spindlePosSync; // Non-zero if gearbox is on and a soft limit was removed while axis was on it
extern long spindlePosGlobal; // global spindle position that is unaffected by e.g. zeroing

extern volatile int pulse1Delta; // Outstanding pulses generated by pulse generator on terminal A1.
extern volatile int pulse2Delta; // Outstanding pulses generated by pulse generator on terminal A2.

int getApproxRpm();
inline long spindleModulo(long value) { return (value + ENCODER_STEPS_INT) % ENCODER_STEPS_INT; }

void zeroSpindlePos();
void processSpindlePosDelta();

void taskAttachInterrupts(void *param);
